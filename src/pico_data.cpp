#include "pico_data.h"
#include "pico_core.h"
#include "pico_script.h"

const char* gfx =
    R"(00000000000aaa00008c8000009c9000000000000000000011111111111111111111111111111111bbbb3bbbbbbb3bbbb3bbbbbb444444440000000000000000
000000000009dd0008aca800008a800000bbbb0000bbbb00111111111111111111111111111111113bbb2bbb3bbb2bbbb2bbb3b3444444440000000000000000
007007000769d500089a9800008980000bbbbbb00bbbbbb0117111a11111111111111111111111112b234b3b23b343b334b3b2b2444444440000000000000000
0007700076155000008a8000000800000b8bb8b00babbab0111111111111191111111111111111114b42432b423242b224b234b4444444440000000000000000
000770007615567000898000000200000bbbbbb00bbbbbb01111111111111111111111111111c1114344424b44244434443424b4444444440000000000000000
0070070078280000000800000008000000b00b0000b00b0011111111111111111111111111111111424444434444442444244434444444440000000000000000
000000000015000000020000000200000b0000b00b0000b011111111111111111111111a11111111444444424444444444444424444444440000000000000000
00000000001dd00000000000000000000b0000b000b00b0011111111111111111111111111111111444444444444444444444444444444440000000000000000
3003003003003030bb0bb0bbbb0bb0bbbbbb0bbbbbbbaaa711111111111111111111111111111111155555551555555515555555111111110000000000000000
5005005005005050cc0cc0cccc0cc0cccccc0cccccccaaa711111111111111111111111111111111150505a5159505051505f505111111110000000000000000
80080080080080809909909999099099999909999999aaa711111111111111111911111111111111155555551555555515555555111111110000000000000000
50050050050050506606606666066066666606666666aaa71111191111111111111111111111111115a505051505050515050575111111110000000000000000
00000000000000000000000000000000000000000000000011111111111111111111111111111111155555551555555515555555155555550000000000000000
000000000000000000000000000000000000000000000000111111111111111111111111111111111505050515a5050515f50505150505050000000000000000
00000000000000000000000000000000000000000000000011111111111111111111171111911111155555551555555515555555155555550000000000000000
0000000000000000000000000000000000000000000000001111111111a111111111111111111111150505051505059515050505150505050000000000000000
007777777766660007777777776766d0000000000000000011a11111111111111111111111111111111111111111111100000000000000000000000000000000
0767767666d6ddd0d667767666d6dd55000000000000000011111111111111111111111111111111111111111111111100000000000000000000000000000000
7667767666d6dd5dd667767666d6dd55000000000000000011111111111111111111111111111111111111111111111100000000000000000000000000000000
d667767666d6dd55899aa8a999898822000000000000000011117111111111191111111111111111111111111111111100000000000000000000000000000000
d667767666d6dd55899aa8a999898822000000000000000011111111111111111111111111111111166666661666666600000000000000000000000000000000
d667767666d6dd55d667767666d6dd5500000000000000001111111111111111111111111a111111168886861633363600000000000000000000000000000000
d667767666d6dd55d667767666d6dd55000000000000000011111111111111111111111111111111166666661666666600000000000000000000000000000000
0dd66d6ddd5d55500dd66d6ddd5d5550000000000000000011111111111111111111111111111111112111211121112100000000000000000000000000000000
07777777776766d007777777776766d000000000000000001111111111a11111111111111111111111121111111a111100000000000000000000000000000000
d667767666d6dd55d667767666d6dd55000000000000000011111111111111111111111111111111111011111110111100000000000000000000000000000000
d667767666d6dd55d667767666d6dd55000000000000000011111111111111111111111111111111111011111110111100000000000000000000000000000000
d667767666d6dd55d667767666d6dd550000000000000000111111111111111111111a1111111111111011111110111100000000000000000000000000000000
d667767666d6dd55d667767666d6dd55000000000000000011c11111111111111111111111111111111010111110101100000000000000000000000000000000
d667767666d6dd555667767666d6dd55000000000000000011111111111111117111111111111111111010111110101100000000000000000000000000000000
d667767666d6dd550d67767666d6dd50000000000000000011111111111111111111111111111111111010111110101100000000000000000000000000000000
0dd66d6ddd5d555000d66d6ddd5555000000000000000000111111111a1111111111111111111111110000011100000100000000000000000000000000000000
0ddddddddddddddd000dddddddddddd0ddddddddddddddd0dddddddddddd0000ddd000000000ddd0dddddddddddd0000000dddddddddddd00000000000000000
0ddddddddddddddd0dddddddddddddd0ddddddddddddddd0dddddddddddddd00ddd000000000ddd0dddddddddddddd000dddddddddddddd00000000000000000
0ddddddddddddddd0dddddddddddddd0ddddddddddddddd0dddddddddddddd00ddd000000000ddd0dddddddddddddd000dddddddddddddd00000000000000000
0000000ddd000000dddd000000000000000000ddd0000000ddd00000000dddd0ddd000000000ddd0ddd00000000dddd0dddd0000000000000000000000000000
0000000ddd000000ddd0000000000000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0ddd00000000000000000000000000000
0000000ddd000000ddd0000000000000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0ddd00000000000000000000000000000
0000000ddd000000dddddddddddd0000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0dddddddddddd00000000000000000000
0000000ddd000000dddddddddddd0000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0dddddddddddd00000000000000000000
0000000ddd000000dddddddddddd0000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0dddddddddddd00000000000000000000
0000000ddd000000ddd0000000000000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0ddd00000000000000000000000000000
0000000ddd000000ddd0000000000000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0ddd00000000000000000000000000000
0000000ddd000000ddd0000000000000000000ddd0000000ddd000000000ddd0ddd000000000ddd0ddd000000000ddd0ddd00000000000000000000000000000
000000dddd000000dddd000000000000000000ddd0000000ddd00000000dddd0dddd0000000dddd0ddd00000000dddd0dddd0000000000000000000000000000
0dddddddd00000000dddddddddddddd0000000ddd0000000dddddddddddddd000ddddddddddddd00dddddddddddddd000dddddddddddddd00000000000000000
0dddddddd00000000dddddddddddddd0000000ddd0000000dddddddddddddd000ddddddddddddd00dddddddddddddd000dddddddddddddd00000000000000000
0dddddd000000000000dddddddddddd0000000ddd0000000dddddddddddd0000000ddddddddd0000dddddddddddd0000000dddddddddddd00000000000000000
)";

const char* gff =
    R"(0000000000000000000000000000000000000000000000000000000000000000000000000000000000002010000000000000000000000000000040080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)";

const char* map =
    R"(3906093939390939183939393939393920212223000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3907083939390639393906391839063922233031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3939093907083939183939393939393930312223000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3939393939393939393939393939393922233031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3918393939393939393939393939183930312223000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3939393939391839063939393939393922233031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3939063939393939393939183906393930312223000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3918391839393839183939393939391822233233000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3939393916393939393939393939163900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1639163939393916393939163939393900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
393939393b393917393939162b16393900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
392739161c1739391d3918391b39393900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
391b391d1b39391b1c1d2a1c1c391a3900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1c1a1c1a1d1a1c1a1c1c1a1a1c1a1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0a0b0a0c0c0b0a0b0c0a0b0a0c0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)";

const char* font =
    R"(00000700707070707770707077000700070007007070000000000000000000707770770077707770707077707000777077707770000000000070000070007770
00000700707077707700007077007000700000700700070000000000000007007070070000700070707070007000007070707070070007000700777007000070
00000700000070700770070077000000700000707770777000007770000007007070070077700770777077707770007077707770000000007000000000700770
00000000000077707770700070700000700000700700070007000000000007007070070070000070007000707070007070700070070007000700777007000000
00000700000070700700707077700000070007007070000070000000070070007770777077707770007077707770007077700070000070000070000070000700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077007000077007000000
70707770770077707700777077707770707077707770707070007770770007707770070077700770777070707070707070707070777070000700007070700000
70707070770070007070770077007000707007000700770070007770707070707070707070707000070070707070707007007770007070000700007000000000
70007770707070007070700070007070777007000700707070007070707070707770770077000070070070707770777070700070700070000700007000000000
07707070777077707700777070007770707077707700707077707070707077007000077070707700070007700700777070707770777077000070077000007770
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07007770777007707700777077700770707077707770707070007770770007707770070077700770777070707070707070707070777007700700770000000000
00707070707070007070700070007000707007000700707070007770707070707070707070707000070070707070707070707070007007000700070000700700
00007770770070007070770077007000777007000700770070007070707070707770707077007770070070707070707007007770070077000700077077707070
00007070707070007070700070007070707007000700707070007070707070707000770070700070070070707770777070700070700007000700070070007070
00007070777007707770777070007770707077707700707077707070707077007000077070707700070007700700777070707770777007700700770000007770
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777770707070707000007007777700700070000070000000777000077077000077700000777000007770000777770077777770000777000777770000070000
77777770070707007777777077000770007000700077770007770700077777000770770000777000077777007770077070777070000700007700077000777000
77777770707070707077707077000770700070000077700007777700077777007770777007777700777777707700077077777770000700007707077007777700
77777770070707007077707077707770007000700777700007777700007770000770770000777000070707007770077070000070077700007700077000777000
77777770707070700777770007777700700070000000700000777000000700000077700000707000070777000777770077777770077700000777770000070000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777000007000007777700077777000000000000000000077777007777777070707070000000000000000000000000000000000000000000000000
00000000770077700077700000777000777077707070000070007000770707700000000070707070000000000000000000000000000000000000000000000000
70707070770007707777777000070000770007700700707007070700777077707777777070707070000000000000000000000000000000000000000000000000
00000000770077700777770000777000770007700000070000700070770707700000000070707070000000000000000000000000000000000000000000000000
00000000077777000700070007777700077777000000000000000000077777007777777070707070000000000000000000000000000000000000000000000000)";

const char* script = R"(
g = {}


function _init()
	cartdata("jetdude_hs_data")
	cls()
	poke(0x5f2d, 1)
	init_score()
	set_mode("intro")
	change_mode()
end


smoke_colours = {5, 13, 8, 9, 10, 10, 10, 10}
explode_colours = {5, 13, 8, 9, 10, 7, 7, 7}

function do_init()
	bg_pos1=0
	bg_pos2=0
	p1_pos={x=12, y=64}
	p1_dy=0
	last_shoot=false
	pipe_countdown=rnd(32)+50
	pipe_size={w=16, h=64}
	frame_count = 0
	set_timer(0)

	smoke = make_particles(
		function (p) 
			if (p.y + p.dy > 112) p.dy = -p.dy
 			p.x += p.dx
 			p.y += p.dy
			p.dy = p.dy * 0.9
 		end, 
		function (p)		
			rectfill(p.x, p.y, p.x+1, p.y+1, smoke_colours[flr(p.ttl/3)])
		end)
	explode = make_particles(
		function (p) 
 			p.x += p.dx
 			p.y += p.dy
			p.dx = p.dx * 0.9
			p.dy = p.dy * 0.9 + 0.2
 		end, 
		function (p) 
			if (p.size == nil) p.size=6
			circfill( p.x, p.y, p.size, explode_colours[flr(p.ttl/2)+1])
			p.size-=0.3
		end)
	sparks = make_particles()
	shots = make_particles(nil, 
		function (p)
			clip(p1_pos.x, 0, 127 - p1_pos.x, 127)
			sspr(0,8+band(p.ttl, 7)/2, 6*8, 1, p.x, p.y)
			clip() 
		end)
	pipes = make_particles(nil, 
		function (p)
			map(pick(p.y<=0,18,16),0,p.x,p.y,2,8)
		end)

 	aliens = make_particles( 
		function (p)
			p.y = 64 + sin(p.t)*32
			p.t += 0.01
		end,
		function (p)
			spr(pick(band(frame_count, 0x10) == 0,4,5), p.x, p.y)
		end)

end

function set_mode (m)
	_new_mode = m
end

function change_mode ()
	_enter = true
	do_update = g["update_".._new_mode]
	do_draw = g["draw_".._new_mode]
end


function _update()
	do_update(_enter)
	update_timer()
	frame_count+=1
end 

function _draw()
	do_draw(_enter)
	_enter = false
	if (_new_mode ~= nil) then 
		change_mode()
		_new_mode = nil
		_enter = true
	end
end

function update_bg () 
	bg_pos1-=1
	bg_pos2-=1.5
	if(bg_pos1<=-128) bg_pos1+=128	
	if(bg_pos2<=-128) bg_pos2+=128	
end

g.update_intro = function (enter)
	if (enter) do_init()
	if (btn(5) or btn(4) or (stat(34) > 0)) set_mode("play")
	update_bg()
end

g.update_play = function (enter)
	if (enter) then 
		init_score()
	end
 
	local shoot = btn(5) or (stat(34) > 0)
	local moving = false;

	if(shoot) then 
		p1_dy-=0.2
		for i=0,2 do 
			add_p(smoke, p1_pos.x+1, p1_pos.y+4+rnd(2),-0.02+rnd(5)/90, 2, 15+rnd(10))
		end
	else 
		p1_dy+=0.1
	end
 
	p1_dy=limit(p1_dy,-5, 5)
	p1_pos.y+=p1_dy
	p1_pos.y=limit(p1_pos.y,0,104) 

	if(p1_pos.y<104) then 
		update_bg()
		moving = true;
	else
		p1_dy = -p1_dy * 0.6
	end	

	if(p1_pos.y==0) p1_dy=limit(p1_dy, 0, 3)

	if(shoot and not last_shoot) then
		add_p(shots, p1_pos.x-48, p1_pos.y+4, 0.75, 6, 60)
		sfx(0, 0)
		sfx(1, 1)
	end 

	if(not shoot) sfx(-2, 1)

	last_shoot=shoot

	if(moving) then	
		pipe_countdown-=1
		if(pipe_countdown < 0) then
			pipe_countdown=rnd(32)+32
			local pos = pick(rnd(1)<0.5, irnd(50, 100), irnd(-50, 0)) 
			local p = add_p(pipes, 150, pos, 0, 0, 180)
			p.w, p.h = pipe_size.w, pipe_size.h

			local a = add_p(aliens, p.x+4, 0, 0, 0, 180)
			a.w,a.h=8,8
			a.t = rnd(1)
		end 
	end

	local p1_hitp = {x=p1_pos.x+4, y=p1_pos.y+4}
	hit = p_in_rs(p1_hitp, pipes.ps) ~= nil
	hit = hit or p_in_rs(p1_hitp, aliens.ps) ~= nil 
	if (hit) then 
		set_mode("gameover")
		add_explosion(explode, p1_hitp.x, p1_hitp.y, 50)
		sfx(3, 2)
	end

	for s in rall(shots.ps) do 
		local sp = {x=s.x+40, y=s.y}
		local hp = p_in_rs(sp, pipes.ps)
		if (hp ~= nil) then 
			add_explosion(sparks, sp.x, sp.y, 10)
			del (shots.ps, s)
			sfx(4, 3)
		else
			local ha = p_in_rs(sp, aliens.ps)
			if (ha ~= nil) then 
				del (aliens.ps, ha)
				del (shots.ps, s)
				add_explosion(explode, sp.x, sp.y, 30)
				add_score(10)
				sfx(3, 2)
			end
		end
	end

	local motion = pick (moving, -1.5, 0)
	
	update_p(pipes, motion, 0, moving)		
	update_p(smoke)
	update_p(shots)	
	update_p(aliens, motion, 0, moving)	
	update_p(explode, motion, 0)	
	update_p(sparks, motion, 0)	

	update_score()
end

g.update_gameover = function (enter)
	if (enter) then 
		set_timer(120)
		sync_score() 
		sfx(-2, 1)
	end

	update_p(explode)
	update_p(sparks)
	if (timer_exp()) then 
		set_mode("intro")
	end
	
end


g.draw_intro = function ()
	draw_bg1()
	draw_bg2()
	pal(13, 5)
	spr(64, 9, 41, 14, 2)
	pal(13, 7)
	spr(64, 7, 39, 14, 2)
	pal(13, 9)
	spr(64, 8, 40, 14, 2)
	pal()
	draw_scores()
	print("press ❎ or tap screen to start", 3, 70, 7)
end

bg_animation = {
	{x=4, y=10, s=58, count=0},
	{x=10, y=12, s=43, count=0},
	{x=12, y=10, s=42, count=0}
}

function draw_bg1 ()
	for a in all(bg_animation) do
		if(a.count == 0) then 
			local s = mget(a.x, a.y)
			a.count = fget(a.s)
			mset(a.x, a.y, a.s)
			a.s = s
		else
			a.count-=1
		end
	end
	palt(0, false)
	map(0,0,bg_pos1,0,16,14)
	map(0,0,bg_pos1+128,0,16,14)
	palt(0, true)

end

function draw_bg2 ()
	map(0,14,bg_pos2,112,16,2)
	map(0,14,bg_pos2+128,112,16,2)
end

function draw_player ()
	spr(1,p1_pos.x,p1_pos.y)
end

g.draw_play = function ()
	draw_bg1()
	draw_p(shots)
	draw_p(smoke)
	draw_p(aliens)
	draw_p(pipes)
	draw_p(explode)
	draw_p(sparks)
	draw_bg2()
	draw_player()
	draw_scores()
end

g.draw_gameover = function () 
	draw_bg1()
	draw_p(aliens)
	draw_p(pipes)
	draw_p(explode)
	draw_p(sparks)
	draw_bg2()
	--draw_player()
	draw_scores()

	if(#explode.ps == 0) then 
		print("game over", 51, 31, 0)
		print("game over", 49, 31, 0)
		print("game over", 51, 29, 0)
		print("game over", 49, 29, 0)		
		print("game over", 50, 30, 7)
	end
end
 
-->8

function set_timer(t)
	_timer = t
end

function update_timer()
	if (_timer > 0) _timer-=1 
end

function timer_exp ()
	return _timer == 0
end

function rall(a)
	local i = #a	
	return function()
		if(i==0) return nil
		i-=1
		return a[i+1] 
	end	
end

function limit(v, lmin, lmax)
	if(v < lmin) return lmin
	if(v > lmax) return lmax
	return v
end

function irnd(a, b)
	return flr(rnd(b-a) + a)
end

function pick(f, a, b)
	if(f) return a
	return b
end

function add_v (a, b)
	return {a.x + b.x, a.y + b.y}
end

function sub_v (a, b)
	return {a.x - b.x, a.y - b.y}
end

-->8

function make_particles (up, dp)
	local p = {}
	p.ps = {} 
	if(up==nil) then
 	p.up = function (p) 
 		p.x += p.dx
 		p.y += p.dy
 	end
 else
 	p.up = up
 end
	
	if(dp==nil) then
		p.dp = function (p)
			pset(p.x, p.y, 7)
		end
	else 
		p.dp = dp
	end
	return p
end

function add_p (ps, x, y, a, s, ttl)
	local p = {}
	p.x, p.y = x, y
	p.dx, p.dy = sin(a) * s, cos(a) * s
	p.ttl = ttl 
	add(ps.ps, p)
	return p
end

function update_p (ps, ox, oy, ttldec)
	for p in rall(ps.ps) do 
		if p.ttl<=0 then 
			del(ps.ps, p)
		else 
			ps.up(p)
			if (ox~=nil) p.x += ox
			if (oy~=nil) p.y += oy
			if (ttldec==nil or ttldec == true) p.ttl-=1
		end
	end
end

function draw_p (ps)
	for p in all(ps.ps) do 
		ps.dp(p)		
	end
end

function add_explosion (ps, x, y, c) 
	for n=0,c do
		add_p(ps, x, y, rnd(1), rnd(1)+1, 10+rnd(10))
	end
end

-->8

function p_in_r (p, r)
	if (p.x < r.x) return false
	if (p.y < r.y) return false
	if (p.x > r.x+r.w) return false
	if (p.y > r.y+r.h) return false
	return true
end

function p_in_rs (p, rs) 
	for r in rall(rs) do 
		if (p_in_r(p, r)) return r
	end
	return nil
end
-->8

function init_score()
	score_cur = 0;
	score_disp = 0;
	score_hi = dget (1);
	new_hi = false
end

function update_score()
	if(score_disp < score_cur) score_disp+=1
	if(score_disp > score_hi) then 
		score_hi = score_disp
		new_hi = true
	end
end

function sync_score()
	score_disp = score_cur 
	if(score_cur > score_hi) then 
		score_hi = score_cur
		new_hi = true
	end
	dset (1, score_hi)
end

function add_score (s)
	score_cur+=s
end

function draw_score(x, y, scr, str, colour)
	local s = tostr(scr)
	str = sub(str,0,#str-#s)..s
	print(str, x+1, y+1, 0)
	print(str, x, y, colour)
end

function draw_scores()
	draw_score(4,120,score_disp,"score: 000000", 7)
	draw_score(84,120,score_hi,"hi: 000000", pick(new_hi and band(frame_count, 0x8)==0, 9, 7))
end


)";

namespace pico_data {
	void load_test_data() {
		pico_control::set_sprite_data(gfx, gff);
		pico_control::set_map_data(map);
	}

	void load_font_data() {
		pico_control::set_font_data(font);
	}

	void load_script() {
		pico_script::load(script);
	}

}  // namespace pico_data